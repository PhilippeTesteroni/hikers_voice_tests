[pytest]
# Asyncio configuration - MUST BE IN pytest SECTION
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

[tool:pytest]
# Pytest configuration for Hiker's Voice test suite

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Test execution settings
testpaths = tests
minversion = 7.0

# Output and reporting
addopts = 
    -v
    --tb=short
    --color=yes
    --capture=no
    --maxfail=5

# Timeout settings
timeout = 60
timeout_method = thread

# Markers for test categorization
markers =
    # Test priority markers
    critical: Critical tests that must pass for deployment
    smoke: Quick smoke tests for basic functionality
    regression: Regression test suite
    
    # Test type markers
    e2e: End-to-end tests
    api: API tests
    ui: UI tests
    integration: Integration tests
    unit: Unit tests
    
    # Speed markers
    slow: Tests that take longer than 10 seconds
    fast: Tests that complete in under 2 seconds
    
    # Feature markers
    auth: Authentication and authorization tests
    review: Review creation and management tests
    moderation: Moderation workflow tests
    search: Search functionality tests
    
    # Environment markers
    local: Tests that run only in local environment
    staging: Tests for staging environment
    prod: Tests safe for production
    
    # Special markers
    flaky: Tests that may fail intermittently
    skip_ci: Tests to skip in CI/CD pipeline
    destructive: Tests that modify or delete data
    performance: Performance and load tests

# Coverage settings
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */node_modules/*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

# Logging configuration
[pytest.log_cli]
level = INFO
format = %(asctime)s [%(levelname)s] %(name)s: %(message)s
date_format = %Y-%m-%d %H:%M:%S

[pytest.log_file]
level = DEBUG
format = %(asctime)s [%(levelname)s] %(name)s: %(message)s
date_format = %Y-%m-%d %H:%M:%S
file = tests/logs/pytest.log

# Plugin configurations
[pytest.ini_options]
# Playwright settings
browser = chromium
headed = true
slowmo = 100
screenshot = only-on-failure
video = retain-on-failure
trace = retain-on-failure

# Parallel execution
workers = auto
